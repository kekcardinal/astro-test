---
// Import the layout
import BaseLayout from '../layouts/BaseLayout.astro';
import Hero from '../components/Hero.astro';
import Btn from '../components/btn.astro';
import Emplois from '../components/Emplois.astro';
import { contentfulClient } from '../lib/contentful';
import type { EntryFieldTypes } from 'contentful';

interface Emplois {
  contentTypeId: "emplois",
  fields: {
    "titreEmplois": EntryFieldTypes.Text,
    "descriptionEmplois": EntryFieldTypes.RichText,
    "tags": EntryFieldTypes.Text,
  }
}

const entries = await contentfulClient.withAllLocales.getEntries<{
  contentTypeId: "emplois",
  fields: {
    "titreEmplois": EntryFieldTypes.Text,
    "descriptionEmplois": EntryFieldTypes.RichText,
    "tags":EntryFieldTypes.Text,
  }
}>({
  content_type: "emplois",
});


const emploisEn = entries.items
  .map(item => ({
    titreEmplois: item.fields["titreEmplois"]["en-US"],
    descriptionEmplois: item.fields["descriptionEmplois"]["en-US"],
    tags: item.fields["tags"]["en-US"],
    lang: "en",
  }))
  .sort((a, b) => a.titreEmplois.localeCompare(b.titreEmplois));

  const emploisFr = entries.items
  .map(item => ({
    titreEmplois: item.fields["titreEmplois"]["fr-CA"],
    descriptionEmplois: item.fields["descriptionEmplois"]["fr-CA"],
    tags: item.fields["tags"]["fr-CA"],
    lang: "fr",
  }))
  .sort((a, b) => a.titreEmplois.localeCompare(b.titreEmplois));

// Get the full URL from the `Astro.request.url`
const currentUrl = new URL(Astro.request.url);
console.log(currentUrl); // Debugging: Check the full URL

// Retrieve the lang parameter from the query string
const lang = currentUrl.searchParams.get("lang"); // Default to 'en' if not found

console.log("LANGUE=", lang); // Debugging: Check the lang value

// Map the lang parameter to the appropriate locale
const locale = lang === "fr" ? "fr-CA" : "en-US";


---

<!-- Use the layout and pass content into the slot -->
<BaseLayout mainClass="emplois">
	<Hero imageUrl="/images/hero-construction.webp" altText="About Page Hero" 
    texte_fr="Envi de rejoindre une équipe dynamique et bâtir ton avenir avec nous?"
    texte_en="Want to join a dynamic team and build your future with us?"
    texte_btn_fr="Contactez-nous"
    texte_btn_en="Contact-us"
    lien="/contact/"/>


      <section class="overlay-section-emplois-page">
        <div class="nombres-des-postes" lang="fr">
          Poste(s) disponible(s) : <span class="jobCount"></span>
        </div>
        <div class="nombres-des-postes" lang="en">
          Available(s) career(s): <span class="jobCount"></span>
        </div>

        {emploisEn.length > 0 ? (
          emploisEn.map((emplois) => (
            <Emplois {...emplois} />
          ))
        ) : (
          <p>No careers available</p>
        )}

        {emploisFr.length > 0 ? (
          emploisFr.map((emplois) => (
            <Emplois {...emplois} />
          ))
        ) : (
          <p>Aucun poste disponible</p>
        )}
                
      </section>
</BaseLayout>